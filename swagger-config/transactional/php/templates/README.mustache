# Mailchimp Transactional SDK â€” PHP

The official PHP SDK for the Mailchimp Transactional API (v1)

## Installation

**Option 1:** Install via Packagist
```
composer require mailchimp/transactional
```

Or add the following to `composer.json`
```
{
  "require": {
    "{{#composerVendorName}}{{.}}{{/composerVendorName}}{{^composerVendorName}}{{gitUserId}}{{/composerVendorName}}/{{#composerProjectName}}{{.}}{{/composerProjectName}}{{^composerProjectName}}{{gitRepoId}}{{/composerProjectName}}": "*"
  }
}
```

Install all composer dependencies using:
```
composer install
```

**Option 2:** Install Manually

Clone the repo
```
git clone git@github.com:postlight/mailchimp-transactional-php.git
```

In the SDK project root, install all dependencies
```
composer install
```

Manually include `vendor/autoload.php` in your implementation
```php
require_once('/path/to/{{packagePath}}/vendor/autoload.php');
```

## Quick Start

```php
require_once('/path/to/{{packagePath}}/vendor/autoload.php');

$mailchimp = new {{invokerPackage}}\ApiClient();
$mailchimp->setApiKey('YOUR_API_KEY');

$response = $mailchimp->users->ping();
print_r($response);
```

## Sending Requests
All requests are sent via POST and accept a single argument as the request body parameter.
```php
$mailchimp->templates->publish([ 'name' => 'My Template']);
```

## Output Formats
Optionally, you can set the default response format for **all requests** to one of the following:
- `json` *(default)*
- `xml`
- `php`
- `yaml`

```php
$mailchimp->setDefaultOutputFormat('xml');
```

You can also set the response format for a **single request** by passing in a special `outputFormat` param to the request body.
```php
$mailchimp->senders->list([ 'outputFormat' => 'php']);
```

## API Endpoints

All URIs are relative to *{{basePath}}*

| SDK Method | Endpoint |
| ---------- | -------- |
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}| **{{#tags}}{{{name}}}{{/tags}}.{{vendorExtensions.x-custom-config.methodNameCamel}}** | {{path}} |
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Additional SDKs

Mailchimp Transactional SDKs are available in a number of additional languages.

<div>
  <a href="https://github.com/postlight/mailchimp-transactional-node">
  <img src="https://github.com/postlight/mailchimp/blob/master/resources/images/lang_node.png?raw=true" width="44" height="44">
  </a>
  <a href="https://github.com/postlight/mailchimp-transactional-php">
  <img src="https://github.com/postlight/mailchimp/blob/master/resources/images/lang_php.png?raw=true" width="44" height="44">
  </a>
  <a href="https://github.com/postlight/mailchimp-transactional-ruby">
  <img src="https://github.com/postlight/mailchimp/blob/master/resources/images/lang_ruby.png?raw=true" width="44" height="44">
  </a>
  <a href="https://github.com/postlight/mailchimp-transactional-python">
  <img src="https://github.com/postlight/mailchimp/blob/master/resources/images/lang_python.png?raw=true" width="44" height="44">
  </a>
  <a href="https://github.com/postlight/mailchimp-transactional-java">
  <img src="https://github.com/postlight/mailchimp/blob/master/resources/images/lang_java.png?raw=true" width="44" height="44">
  </a>
    <a href="https://github.com/postlight/mailchimp-transactional-csharp">
  <img src="https://github.com/postlight/mailchimp/blob/master/resources/images/lang_csharp.png?raw=true" width="44" height="44">
  </a>
</div>
