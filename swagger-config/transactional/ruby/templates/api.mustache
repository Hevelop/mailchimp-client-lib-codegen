=begin
{{> api_info}}
=end

require 'uri'

module {{moduleName}}
{{#operations}}
  class {{classname}}
    attr_accessor :api_client

    attr_accessor :api_key

    def initialize(api_key = '', api_client = ApiClient.default)
      @api_key = api_key
      @api_client = api_client
    end
{{#operation}}
    {{#summary}}
    # {{{summary}}}
    {{/summary}}
    {{#notes}}
    # {{{notes}}}
    {{/notes}}
{{#allParams}}{{#required}}    # @param {{paramName}} {{description}}
{{/required}}{{/allParams}}    # @param [Hash] opts the optional parameters
{{#allParams}}{{^required}}    # @option opts [{{{dataType}}}] :{{paramName}} {{description}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
{{/required}}{{/allParams}}    # @return [{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}nil{{/returnType}}]
    def {{vendorExtensions.x-custom-config.methodNameSnake}}({{#allParams}}{{#required}}{{paramName}} = {}, {{/required}}{{/allParams}}opts = {})
      {{#returnType}}data = {{/returnType}}{{vendorExtensions.x-custom-config.methodNameSnake}}_with_http_info({{#allParams}}{{#required}}{{paramName}}, {{/required}}{{/allParams}}opts)
      {{#returnType}}data{{/returnType}}{{^returnType}}nil{{/returnType}}
    end

    {{#summary}}
    # {{summary}}
    {{/summary}}
    {{#notes}}
    # {{notes}}
    {{/notes}}
{{#allParams}}{{#required}}    # @param {{paramName}} {{description}}
{{/required}}{{/allParams}}    # @param [Hash] opts the optional parameters
{{#allParams}}{{^required}}    # @option opts [{{{dataType}}}] :{{paramName}} {{description}}
{{/required}}{{/allParams}}    # @return [Array<({{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}nil{{/returnType}}, Fixnum, Hash)>] {{#returnType}}{{{returnType}}} data{{/returnType}}{{^returnType}}nil{{/returnType}}, response status code and response headers
    def {{vendorExtensions.x-custom-config.methodNameSnake}}_with_http_info({{#allParams}}{{#required}}{{paramName}}, {{/required}}{{/allParams}}opts = {})
      {{#allParams}}
      {{#required}}
      # add api key to request body
      body[:key] = @api_key

      {{#isEnum}}
      {{^isContainer}}
      {{/isContainer}}
      {{/isEnum}}
      {{/required}}
      {{/allParams}}
      # resource path
      local_var_path = '{{{path}}}'{{#pathParams}}.sub('{' + '{{baseName}}' + '}', {{paramName}}.to_s){{/pathParams}}

      # http body (model)
      data = @api_client.call_api(:{{httpMethod}}, local_var_path, :body => body)
      return data
    end
{{/operation}}
  end
{{/operations}}
end
